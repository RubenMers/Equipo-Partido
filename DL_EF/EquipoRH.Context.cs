//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL_EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EquipoHREntities : DbContext
    {
        public EquipoHREntities()
            : base("name=EquipoHREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Jugador> Jugadors { get; set; }
        public virtual DbSet<Resultado> Resultadoes { get; set; }
        public virtual DbSet<Equipo> Equipoes { get; set; }
        public virtual DbSet<Partido> Partidoes { get; set; }
        public virtual DbSet<EquipoPartido> EquipoPartidoes { get; set; }
    
        public virtual int EquipoAdd(string nombre, Nullable<System.DateTime> fechaDeFundacion, string logotipo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaDeFundacionParameter = fechaDeFundacion.HasValue ?
                new ObjectParameter("FechaDeFundacion", fechaDeFundacion) :
                new ObjectParameter("FechaDeFundacion", typeof(System.DateTime));
    
            var logotipoParameter = logotipo != null ?
                new ObjectParameter("Logotipo", logotipo) :
                new ObjectParameter("Logotipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EquipoAdd", nombreParameter, fechaDeFundacionParameter, logotipoParameter);
        }
    
        public virtual int EquipoDelete(Nullable<int> idEquipo)
        {
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EquipoDelete", idEquipoParameter);
        }
    
        public virtual ObjectResult<EquipoGetAll_Result> EquipoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EquipoGetAll_Result>("EquipoGetAll");
        }
    
        public virtual int EquipoUpdate(Nullable<int> idEquipo, string nombre, Nullable<System.DateTime> fechaDeFundacion, string logotipo)
        {
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaDeFundacionParameter = fechaDeFundacion.HasValue ?
                new ObjectParameter("FechaDeFundacion", fechaDeFundacion) :
                new ObjectParameter("FechaDeFundacion", typeof(System.DateTime));
    
            var logotipoParameter = logotipo != null ?
                new ObjectParameter("Logotipo", logotipo) :
                new ObjectParameter("Logotipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EquipoUpdate", idEquipoParameter, nombreParameter, fechaDeFundacionParameter, logotipoParameter);
        }
    
        public virtual ObjectResult<IdEquipoGetById_Result> IdEquipoGetById(Nullable<int> idEquipo)
        {
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IdEquipoGetById_Result>("IdEquipoGetById", idEquipoParameter);
        }
    
        public virtual int JugadorAdd(string nombre, Nullable<System.DateTime> fechaDeNacimiento, string descripcion, Nullable<int> idEquipo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("FechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("FechaDeNacimiento", typeof(System.DateTime));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JugadorAdd", nombreParameter, fechaDeNacimientoParameter, descripcionParameter, idEquipoParameter);
        }
    
        public virtual int JugadorDelete(Nullable<int> idJugador)
        {
            var idJugadorParameter = idJugador.HasValue ?
                new ObjectParameter("IdJugador", idJugador) :
                new ObjectParameter("IdJugador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JugadorDelete", idJugadorParameter);
        }
    
        public virtual ObjectResult<JugadorGetAll_Result> JugadorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JugadorGetAll_Result>("JugadorGetAll");
        }
    
        public virtual int JugadorUpdate(Nullable<int> idJugador, string nombre, Nullable<System.DateTime> fechaDeNacimiento, string descripcion, Nullable<int> idEquipo)
        {
            var idJugadorParameter = idJugador.HasValue ?
                new ObjectParameter("IdJugador", idJugador) :
                new ObjectParameter("IdJugador", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaDeNacimientoParameter = fechaDeNacimiento.HasValue ?
                new ObjectParameter("FechaDeNacimiento", fechaDeNacimiento) :
                new ObjectParameter("FechaDeNacimiento", typeof(System.DateTime));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JugadorUpdate", idJugadorParameter, nombreParameter, fechaDeNacimientoParameter, descripcionParameter, idEquipoParameter);
        }
    
        public virtual ObjectResult<JugadorGetById_Result> JugadorGetById(Nullable<int> idJugador)
        {
            var idJugadorParameter = idJugador.HasValue ?
                new ObjectParameter("IdJugador", idJugador) :
                new ObjectParameter("IdJugador", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JugadorGetById_Result>("JugadorGetById", idJugadorParameter);
        }
    
        public virtual ObjectResult<EquipoPartidoGetAll_Result> EquipoPartidoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EquipoPartidoGetAll_Result>("EquipoPartidoGetAll");
        }
    
        public virtual ObjectResult<PartidoGetAll_Result> PartidoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PartidoGetAll_Result>("PartidoGetAll");
        }
    
        public virtual ObjectResult<EquipoPartidoInnerJoin_Result1> EquipoPartidoInnerJoin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EquipoPartidoInnerJoin_Result1>("EquipoPartidoInnerJoin");
        }
    
        public virtual int EquipoPartidoAdd(Nullable<int> idEquipo, Nullable<int> idPartido, Nullable<int> idEquipoVisita)
        {
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            var idPartidoParameter = idPartido.HasValue ?
                new ObjectParameter("IdPartido", idPartido) :
                new ObjectParameter("IdPartido", typeof(int));
    
            var idEquipoVisitaParameter = idEquipoVisita.HasValue ?
                new ObjectParameter("IdEquipoVisita", idEquipoVisita) :
                new ObjectParameter("IdEquipoVisita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EquipoPartidoAdd", idEquipoParameter, idPartidoParameter, idEquipoVisitaParameter);
        }
    
        public virtual ObjectResult<EquipoPartidoGetById_Result> EquipoPartidoGetById(Nullable<int> idEquipoPartido)
        {
            var idEquipoPartidoParameter = idEquipoPartido.HasValue ?
                new ObjectParameter("IdEquipoPartido", idEquipoPartido) :
                new ObjectParameter("IdEquipoPartido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EquipoPartidoGetById_Result>("EquipoPartidoGetById", idEquipoPartidoParameter);
        }
    
        public virtual int EquipoPartidoUpdate(Nullable<int> idEquipoPartido, Nullable<int> idEquipo, Nullable<int> idPartido, Nullable<int> idEquipoVisita)
        {
            var idEquipoPartidoParameter = idEquipoPartido.HasValue ?
                new ObjectParameter("IdEquipoPartido", idEquipoPartido) :
                new ObjectParameter("IdEquipoPartido", typeof(int));
    
            var idEquipoParameter = idEquipo.HasValue ?
                new ObjectParameter("IdEquipo", idEquipo) :
                new ObjectParameter("IdEquipo", typeof(int));
    
            var idPartidoParameter = idPartido.HasValue ?
                new ObjectParameter("IdPartido", idPartido) :
                new ObjectParameter("IdPartido", typeof(int));
    
            var idEquipoVisitaParameter = idEquipoVisita.HasValue ?
                new ObjectParameter("IdEquipoVisita", idEquipoVisita) :
                new ObjectParameter("IdEquipoVisita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EquipoPartidoUpdate", idEquipoPartidoParameter, idEquipoParameter, idPartidoParameter, idEquipoVisitaParameter);
        }
    
        public virtual ObjectResult<EquipoPartidoGetByIdInner_Result> EquipoPartidoGetByIdInner(Nullable<int> idEquipoPartido)
        {
            var idEquipoPartidoParameter = idEquipoPartido.HasValue ?
                new ObjectParameter("IdEquipoPartido", idEquipoPartido) :
                new ObjectParameter("IdEquipoPartido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EquipoPartidoGetByIdInner_Result>("EquipoPartidoGetByIdInner", idEquipoPartidoParameter);
        }
    
        public virtual int EquipoPartidoDelete(Nullable<int> idEquipoPartido)
        {
            var idEquipoPartidoParameter = idEquipoPartido.HasValue ?
                new ObjectParameter("IdEquipoPartido", idEquipoPartido) :
                new ObjectParameter("IdEquipoPartido", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EquipoPartidoDelete", idEquipoPartidoParameter);
        }
    }
}
